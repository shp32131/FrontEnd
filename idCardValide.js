/* 
 * 身份证号码校验函数：
 * 参数: 参数应该是一个字符串，不能是一个数值，18位数值已经超出js计算范围
 * 功能：
 * 1.支持15和18位身份证号
 * 2.支持地址编码，出生日期，校验位验证
 * 正则：'^\d{6}(18|19|20)?\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01]\d{3})(\d|[xX])$'
 * 身份证号合法性校验规则说明:
 * 根据ISO 7064:1983.MOD 11-2 规范
 * 第1，2位 所在省(直辖市，自治区)编码
 * 第3，4位 所在地级市(自治州)编码
 * 第5，6位 所在地级区(县，自治县，县级市)编码
 * 第7-10位 年份,第七,八位可能18,19,20
 * 第11，12位 月份,可能是01-12
 * 第13，14位 日期,可能是01-31之间的数值
 * 第15，16位 所在地派出所代码，可以取0-9
 * 第17位 性别,奇数(1,3,5,7,9)男性，偶数(2,4,6,8,0)女性
 * 第18位 校验位,可以根据由算法由前面17位计算出来，可能是数字0-9,也可能是'X'或'x'
 */
function idCardValid(code) {
  code = code + '';
  const city = {
    11: '北京',
    12: '天津',
    13: '河北',
    14: '山西',
    15: '内蒙古',
    21: '辽宁',
    22: '吉林',
    23: '黑龙江',
    31: '上海',
    32: '江苏',
    33: '浙江',
    34: '安徽',
    35: '福建',
    36: '江西',
    37: '山东',
    41: '河南',
    42: '湖北',
    43: '湖南',
    44: '广东',
    45: '广西',
    46: '海南',
    50: '重庆',
    51: '四川',
    52: '贵州',
    53: '云南',
    54: '西藏',
    61: '陕西',
    62: '甘肃',
    63: '青海',
    64: '宁夏',
    65: '新疆',
    71: '台湾',
    81: '香港',
    82: '澳门',
    91: '国外',
  };
  let result = true;
  let msg = '验证成功';

  // 简单参数校验
  if(!code) {
    return {
      result: false,
      msg: '身份证号码不正确'
    }
  }

  // 身份证号码地址编码错误
  if(!city[code.substr(0,2)]) {
    return {
      result: false,
      msg: '身份证号码不正确'
    }
  }
  // 身份证号码格式不正确
  if(!/^\d{6}(18|19|20)?\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01]\d{3})(\d|[xX])$/.test(code)) {
    return {
      result: false,
      msg: '身份证号码不正确'
    }
  }

  // 18位身份证需要验证最后一位
  if(code.length === 18) {

    code = code.split('');

    // 加权因子
    const factor = [7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2];

    // 校验位
    const parity = [1,0,'X',9,8,7,6,5,4,3,2];

    let sum = 0;
    let ai = 0;
    let wi = 0;

    for(let i = 0;i < 17;i+=1) {
      ai = code[i];
      wi = factor[i];
      sum+= ai * wi;
    }

    // 第18位校验位出错
    if(parity[sum % 11] != code[17].toUpperCase()) {
      return {
        result: false,
        msg: '身份证号码不正确'
      }
    }
  }
}
